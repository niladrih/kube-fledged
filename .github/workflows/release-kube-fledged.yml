
on:
  workflow_call:
    inputs:
      alpine_version:
        description: 'Version of alpine base image'
        required: true
        type: string
      controller_image_repo:
        description: 'kubefledged-controller repository'
        required: true
        type: string
      crictl_image_repo:
        description: 'kubefledged-cri-client repository'
        required: true
        type: string        
      crictl_version:
        description: 'crictl tool version'
        required: true
        type: string
      docker_version:
        description: 'docker version'
        required: true
        type: string
      dockerfile_controller:
        description: 'kubefledged-controller dockerfile path'
        required: true
        type: string
      dockerfile_cri_client:
        description: 'kubefledged-cri-client dockerfile path'
        required: true
        type: string
      dockerfile_operator:
        description: 'kubefledged-operator dockerfile path'
        required: true
        type: string                
      dockerfile_webhook_server:
        description: 'kubefledged-webhook-server dockerfile path'
        required: true
        type: string                                
      golang_version:
        description: 'Go version used during the build'
        required: true
        type: string
      operator_image_repo:
        description: 'kubefledged-operator repository'
        required: true
        type: string      
      operatorsdk_version:
        description: 'operator sdk release version'
        required: true
        type: string         
      webhook_server_image_repo:
        description: 'kubefledged-webhook-server repository'
        required: true
        type: string
    secrets:
      dockerhub_user:
        description: 'Dockerhub username'
        required: true
      dockerhub_pswd:
        description: 'Dockerhub password'
        required: true

jobs:
  release_kube_fledged:
    runs-on: ubuntu-latest
    steps:
    - name: Set Release Tag
      run: echo "VERSION_TAG=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.golang_version }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      env:
        DOCKERHUB_USER: ${{ secrets.dockerhub_user }}
        DOCKERHUB_PSWD: ${{ secrets.dockerhub_pswd }}
      if: "${{ env.DOCKERHUB_USER != '' && env.DOCKERHUB_PSWD != '' }}"
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.dockerhub_user }}
        password: ${{ secrets.dockerhub_pswd }}

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CONTROLLER_IMAGE_REPO: ${{ inputs.controller_image_repo }}
        DOCKERFILE_CONTROLLER: ${{ inputs.dockerfile_controller }}
        CRICTL_IMAGE_REPO: ${{ inputs.crictl_image_repo }}
        DOCKERFILE_CRI_CLIENT: ${{ inputs.dockerfile_cri_client }}
        WEBHOOK_SERVER_IMAGE_REPO: ${{ inputs.webhook_server_image_repo }}
        DOCKERFILE_WEBHOOK_SERVER: ${{ inputs.dockerfile_webhook_server }}
        OPERATOR_IMAGE_REPO: ${{ inputs.operator_image_repo }}
        DOCKERFILE_OPERATOR: ${{ inputs.dockerfile_operator }}
        ALPINE_VERSION: ${{ inputs.alpine_version }}
        GOLANG_VERSION: ${{ inputs.golang_version }}
        CRICTL_VERSION: ${{ inputs.crictl_version }}
        DOCKER_VERSION: ${{ inputs.docker_version }}
        OPERATORSDK_VERSION: ${{ inputs.operatorsdk_version }}

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.8.2

    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.4.0
      env:
        CR_TOKEN: "${{ secrets.CR_TOKEN }}"
      with:
        charts_dir: deploy/helm
        

